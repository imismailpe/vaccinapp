{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["APIBASEURL","App","useState","districtList","setDistrictList","centerList","setCenterList","district","setDistrict","useEffect","axios","get","then","resp","data","districts","catch","e","console","log","dateInput","moment","format","centers","className","map","onClick","district_id","district_name","length","center","name","block_name","address","pincode","fee_type","sessions","session","vaccine","available_capacity","available_capacity_dose1","available_capacity_dose2","date","slots","slot","center_id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAIMA,EAAa,mCAwEJC,MAnEf,WACE,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAoBA,OAnBAC,qBAAU,WACRC,IAAMC,IAAN,UAAaX,GAAb,OATyB,8BASzB,OARiB,OASdY,MAAK,SAAAC,GACJT,EAAgBS,EAAKC,KAAKC,cAE3BC,OAAM,SAAAC,GACLC,QAAQC,IAAI,SAAUF,QAEzB,IACHR,qBAAU,WACR,IAAMW,EAAYC,MAASC,OAAO,cAClCf,GAAYG,IAAMC,IAAN,UAAaX,GAAb,OAjBe,iEAiBf,OAAmDO,EAAnD,iBAAoEa,IAC7ER,MAAK,SAAAC,GACJP,EAAcO,EAAKC,KAAKS,YAEzBP,OAAM,SAAAC,GACLC,QAAQC,IAAI,SAAUF,QAEzB,CAACV,IAEF,sBAAKiB,UAAU,MAAf,UAEIrB,EAAasB,KAAI,SAAAlB,GACf,OACE,qBAAKiB,UAAU,WAAsCE,QAAS,kBAAMlB,EAAYD,EAASoB,cAAzF,SAAwGpB,EAASqB,eAAlFrB,EAASoB,gBAI9C,qBAAKH,UAAU,aAAf,SAEInB,EAAWwB,OAAO,GAAKxB,EAAWoB,KAAI,SAAAK,GACpC,OACE,sBAA4BN,UAAU,kBAAtC,UACE,sBAAKA,UAAU,aAAf,UAA6BM,EAAOC,KAApC,IAA2CD,EAAOE,cAClD,sBAAKR,UAAU,gBAAf,UAAgCM,EAAOG,QAAvC,IAAiDH,EAAOI,WACxD,qBAAKV,UAAU,YAAf,SAA4BM,EAAOK,WAEjCL,EAAOM,SAASP,OAAO,GAAKC,EAAOM,SAASX,KAAK,SAAAY,GAC/C,OACE,qCACE,qBAAKb,UAAU,cAAf,SAA8Ba,EAAQC,UACtC,sBAAKd,UAAU,kBAAf,iCAAsDa,EAAQE,mBAA9D,WAA0FF,EAAQG,yBAAlG,YAAqIH,EAAQI,4BAC7I,qBAAKjB,UAAU,cAAf,SAA8Ba,EAAQK,OAEpCL,EAAQM,MAAMlB,KAAK,SAAAmB,GACjB,OACE,qBAAgBpB,UAAU,WAA1B,SAAsCoB,GAA5BA,cAdhBd,EAAOe,oBCjChBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpC,MAAK,YAAkD,IAA/CqC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a6dfbdc4.chunk.js","sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nconst APIBASEURL = 'https://cdn-api.co-vin.in/api/v2';\nconst DISTRICTLISTENDPOINT = '/admin/location/districts/'\nconst KERALANUMBER = '17';\nconst DATABYDISTRICTENDPOINT = '/appointment/sessions/public/calendarByDistrict?&district_id='\n\nfunction App() {\n  const [districtList, setDistrictList] = useState([]);\n  const [centerList, setCenterList] = useState([]);\n  const [district, setDistrict] = useState('');\n  useEffect(() => {\n    axios.get(`${APIBASEURL}${DISTRICTLISTENDPOINT}${KERALANUMBER}`)\n      .then(resp => {\n        setDistrictList(resp.data.districts);\n      })\n      .catch(e => {\n        console.log(\"error:\", e)\n      })\n  }, []);\n  useEffect(() => {\n    const dateInput = moment().format('DD-MM-YYYY');\n    district && axios.get(`${APIBASEURL}${DATABYDISTRICTENDPOINT}${district}&date=${dateInput}`)\n      .then(resp => {\n        setCenterList(resp.data.centers);\n      })\n      .catch(e => {\n        console.log(\"error:\", e)\n      })\n  }, [district]);\n  return (\n    <div className=\"App\">\n      {\n        districtList.map(district => {\n          return (\n            <div className='chatItem' key={district.district_id} onClick={() => setDistrict(district.district_id)}>{district.district_name}</div>\n          )\n        })\n      }\n      <div className='chatWindow'>\n        {\n          centerList.length>0 && centerList.map(center => {\n            return (\n              <div key={center.center_id} className='messageInBubble'>\n                <div className='centerName'>{center.name}-{center.block_name}</div>\n                <div className='centerAddress'>{center.address}-{center.pincode}</div>\n                <div className='centerFee'>{center.fee_type}</div>\n                {\n                  center.sessions.length>0 && center.sessions.map( session => {\n                    return (\n                      <>\n                        <div className='vaccineName'>{session.vaccine}</div>\n                        <div className='vaccineCapacity'>Available capacity: {session.available_capacity} Dose1: {session.available_capacity_dose1}, Dose2: {session.available_capacity_dose2}</div>\n                        <div className='vaccineDate'>{session.date}</div>\n                        {\n                          session.slots.map( slot => {\n                            return(\n                              <div key={slot} className='slotTime'>{slot}</div>\n                            )\n                          })\n                        }\n                      </>\n                    )\n                  })\n                }\n              </div>\n            )\n          })\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}