{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["APIBASEURL","App","useState","districtList","setDistrictList","centerList","setCenterList","district","setDistrict","loading","setLoading","useEffect","axios","get","then","resp","data","districts","catch","e","alert","dateInput","moment","format","centers","className","length","map","districtItem","district_id","onClick","district_name","center","name","block_name","fee_type","address","pincode","sessions","session","available_capacity","vaccine","date","available_capacity_dose1","available_capacity_dose2","slots","slot","session_id","center_id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAIMA,EAAa,mCA4FJC,MAvFf,WACE,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KA0BA,OAzBAC,qBAAU,WACRD,GAAW,GACXE,IAAMC,IAAN,UAAab,GAAb,OAXyB,8BAWzB,OAViB,OAWdc,MAAK,SAAAC,GACJX,EAAgBW,EAAKC,KAAKC,WAC1BP,GAAW,MAEZQ,OAAM,SAAAC,GACLC,MAAM,SAAUD,GAChBT,GAAW,QAEd,IACHC,qBAAU,WACRD,GAAW,GACX,IAAMW,EAAYC,MAASC,OAAO,cAClChB,GAAYK,IAAMC,IAAN,UAAab,GAAb,OAtBe,iEAsBf,OAAmDO,EAAnD,iBAAoEc,IAC7EP,MAAK,SAAAC,GACJT,EAAcS,EAAKC,KAAKQ,SACxBd,GAAW,MAEZQ,OAAM,SAAAC,GACLC,MAAM,SAAUD,GAChBT,GAAW,QAEd,CAACH,IAEF,sBAAKkB,UAAU,MAAf,UACE,sFACA,+BAEgB,IAAZhB,EAAmB,aACf,qCAEEN,EAAauB,OAAS,EACpBvB,EAAawB,KAAI,SAAAC,GACf,OACE,qBAAKH,UAAWG,EAAaC,cAAgBtB,EAAW,wBAAyB,WAA2CuB,QAAS,kBAAMtB,EAAYoB,EAAaC,cAApK,SAAmLD,EAAaG,eAA9FH,EAAaC,gBAGjH,yBAEN,qBAAKJ,UAAU,aAAf,SAEIpB,EAAWqB,OAAS,EAAIrB,EAAWsB,KAAI,SAAAK,GACrC,OACE,sBAA4BP,UAAU,kBAAtC,UACE,sBAAKA,UAAU,aAAf,UAA6BO,EAAOC,KAApC,IAA2CD,EAAOE,cAClD,qBAAKT,UAAU,YAAf,SAA4BO,EAAOG,WACnC,sBAAKV,UAAU,gBAAf,UAAgCO,EAAOI,QAAvC,MAAmDJ,EAAOK,WAExDL,EAAOM,SAASZ,OAAS,GAAKM,EAAOM,SAASX,KAAI,SAAAY,GAChD,OACE,sBAA8Bd,UAAWc,EAAQC,mBAAqB,+BAAiC,kCAAvG,UACE,qBAAKf,UAAU,cAAf,SAA8Bc,EAAQE,UACtC,qBAAKhB,UAAU,cAAf,SAA8Bc,EAAQG,OACtC,sBAAKjB,UAAU,kBAAf,iCAAsDc,EAAQC,mBAA9D,YAA2FD,EAAQI,yBAAnG,YAAsIJ,EAAQK,4BAC9I,qBAAKnB,UAAU,gBAAf,SAEEc,EAAQM,MAAMlB,KAAI,SAAAmB,GAChB,OACE,qBAAgBrB,UAAU,WAA1B,SAAsCqB,GAA5BA,UARRP,EAAQQ,iBAPhBf,EAAOgB,cA2BjB,0FC1EPC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6d7cced1.chunk.js","sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nconst APIBASEURL = 'https://cdn-api.co-vin.in/api/v2';\nconst DISTRICTLISTENDPOINT = '/admin/location/districts/'\nconst KERALANUMBER = '17';\nconst DATABYDISTRICTENDPOINT = '/appointment/sessions/public/calendarByDistrict?&district_id='\n\nfunction App() {\n  const [districtList, setDistrictList] = useState([]);\n  const [centerList, setCenterList] = useState([]);\n  const [district, setDistrict] = useState('');\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    axios.get(`${APIBASEURL}${DISTRICTLISTENDPOINT}${KERALANUMBER}`)\n      .then(resp => {\n        setDistrictList(resp.data.districts);\n        setLoading(false);\n      })\n      .catch(e => {\n        alert(\"error:\", e)\n        setLoading(false);\n      })\n  }, []);\n  useEffect(() => {\n    setLoading(true);\n    const dateInput = moment().format('DD-MM-YYYY');\n    district && axios.get(`${APIBASEURL}${DATABYDISTRICTENDPOINT}${district}&date=${dateInput}`)\n      .then(resp => {\n        setCenterList(resp.data.centers);\n        setLoading(false);\n      })\n      .catch(e => {\n        alert(\"error:\", e);\n        setLoading(false);\n      })\n  }, [district]);\n  return (\n    <div className=\"App\">\n      <div>Select a district to see Covid vaccine slot details</div>\n      <div>\n        {\n          loading === true ? 'Loading...'\n            : <>\n              {\n                districtList.length > 0 ?\n                  districtList.map(districtItem => {\n                    return (\n                      <div className={districtItem.district_id === district ? 'chatItem selectedDist': 'chatItem'} key={districtItem.district_id} onClick={() => setDistrict(districtItem.district_id)}>{districtItem.district_name}</div>\n                    )\n                  })\n                  : 'No Districts available'\n              }\n              <div className='chatWindow'>\n                {\n                  centerList.length > 0 ? centerList.map(center => {\n                    return (\n                      <div key={center.center_id} className='messageInBubble'>\n                        <div className='centerName'>{center.name}-{center.block_name}</div>\n                        <div className='centerFee'>{center.fee_type}</div>\n                        <div className='centerAddress'>{center.address} - {center.pincode}</div>\n                        {\n                          center.sessions.length > 0 && center.sessions.map(session => {\n                            return (\n                              <div key={session.session_id} className={session.available_capacity ? 'availableBG sessionContainer' : 'notAvailableBG sessionContainer'}>\n                                <div className='vaccineName'>{session.vaccine}</div>\n                                <div className='vaccineDate'>{session.date}</div>\n                                <div className='vaccineCapacity'>Available capacity: {session.available_capacity}, Dose1: {session.available_capacity_dose1}, Dose2: {session.available_capacity_dose2}</div>\n                                <div className='slotContainer'>\n                                {\n                                  session.slots.map(slot => {\n                                    return (\n                                      <div key={slot} className='slotTime'>{slot}</div>\n                                    )\n                                  })\n                                }\n                                </div>\n                              </div>\n                            )\n                          })\n                        }\n                      </div>\n                    )\n                  })\n                    : 'No Centers are available for the selected district. Refresh after some time.'\n                }\n              </div>\n            </>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}